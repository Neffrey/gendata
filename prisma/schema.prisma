// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                       String   @id @default(cuid())
    createdAt                DateTime @default(now())
    updatedAt                DateTime @updatedAt
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?  @db.Text
    access_token             String?  @db.Text
    refresh_token_expires_in Int?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?  @db.Text
    session_state            String?
    oauth_token_secret       String?
    oauth_token              String?
    user                     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          String?   @default("user") // user, admin, banned
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Data Models
model Category {
    id       String  @id @default(cuid())
    slug     String  @unique
    name     String
    items    Item[]
    children Child[]
}

model Child {
    id           String    @id @default(cuid())
    itemId       String    @unique
    parentCatId  String?   @unique
    parentCat    Category? @relation(fields: [parentCatId], references: [id])
    parentItemId String?   @unique
    parentItem   Item?     @relation(fields: [parentItemId], references: [id])
}

model Item {
    id         String   @id @default(cuid())
    slug       String   @unique
    name       String
    rarity     String?
    categoryId String
    category   Category @relation(fields: [categoryId], references: [id])
    Children   Child[]

    @@index([categoryId])
}
